// <auto-generated />
using System;
using Infraestructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Core.Entities.ClienteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("celular");

                    b.Property<string>("DDD")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("ddd");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataalteracao");

                    b.Property<DateTime>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataexclusao");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2")
                        .HasColumnName("datainsercao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("nome");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.ToTable("cliente");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "58672118006",
                            Celular = "912345678",
                            DDD = "62",
                            DataAlteracao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataExclusao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInsercao = new DateTime(2023, 8, 15, 16, 30, 12, 0, DateTimeKind.Unspecified),
                            Nome = "Elias de Moura",
                            UF = "GO"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "76249229086",
                            Celular = "943218765",
                            DDD = "11",
                            DataAlteracao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataExclusao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInsercao = new DateTime(2023, 9, 1, 15, 45, 33, 0, DateTimeKind.Unspecified),
                            Nome = "João da silva",
                            UF = "SP"
                        },
                        new
                        {
                            Id = 3,
                            CPF = "16162984052",
                            Celular = "911223344",
                            DDD = "31",
                            DataAlteracao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataExclusao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataInsercao = new DateTime(2023, 9, 11, 9, 11, 26, 0, DateTimeKind.Unspecified),
                            Nome = "Fulano de Tal",
                            UF = "MG"
                        });
                });

            modelBuilder.Entity("Domain.Core.Entities.FinanciamentoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataalteracao");

                    b.Property<DateTime>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataexclusao");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2")
                        .HasColumnName("datainsercao");

                    b.Property<DateTime>("DataUltimoVencimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataultimovencimento");

                    b.Property<int>("TipoFinanciamento")
                        .HasColumnType("int")
                        .HasColumnName("tipofinanciamento");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valortotal");

                    b.Property<int>("idcliente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idcliente");

                    b.ToTable("financiamento");
                });

            modelBuilder.Entity("Domain.Core.Entities.ParcelaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataalteracao");

                    b.Property<DateTime>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataexclusao");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2")
                        .HasColumnName("datainsercao");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("datapagamento");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("datavencimento");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("int")
                        .HasColumnName("numeroparcela");

                    b.Property<decimal>("ValorParcela")
                        .HasMaxLength(11)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valorparcela");

                    b.Property<int>("idfinanciamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idfinanciamento");

                    b.ToTable("parcela");
                });

            modelBuilder.Entity("Domain.Core.Entities.FinanciamentoEntity", b =>
                {
                    b.HasOne("Domain.Core.Entities.ClienteEntity", "Cliente")
                        .WithMany("Financiamento")
                        .HasForeignKey("idcliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Domain.Core.Entities.ParcelaEntity", b =>
                {
                    b.HasOne("Domain.Core.Entities.FinanciamentoEntity", "Financiamento")
                        .WithMany("Parcela")
                        .HasForeignKey("idfinanciamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Financiamento");
                });

            modelBuilder.Entity("Domain.Core.Entities.ClienteEntity", b =>
                {
                    b.Navigation("Financiamento");
                });

            modelBuilder.Entity("Domain.Core.Entities.FinanciamentoEntity", b =>
                {
                    b.Navigation("Parcela");
                });
#pragma warning restore 612, 618
        }
    }
}
